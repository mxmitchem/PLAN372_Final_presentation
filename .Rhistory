) +
theme_minimal() +
theme(legend.title = element_blank(),
legend.key.size = unit(0.5, "cm"))
Total_Calls = PD_Calls |>
group_by(CALENDAR_YEAR)|>
summarize(count_num = sum(CALL_COUNT))|>
ungroup()
print(Total_Calls)
Total_crime_2017 = PD_Incidents |>
filter(YEAR == 2017) |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(total_crime_per_division = n())|>
ungroup()
print(Total_crime_2017)
Nonviolent_incidents_2017 = PD_Incidents|>
filter(YEAR == 2017)|>
filter(HIGHEST_NIBRS_DESCRIPTION == "Arson" |
HIGHEST_NIBRS_DESCRIPTION == "Burglary/B&E" |
HIGHEST_NIBRS_DESCRIPTION == "Damage/Vandalism Of Property" |
HIGHEST_NIBRS_DESCRIPTION == "Identity Theft" |
HIGHEST_NIBRS_DESCRIPTION == "Motor Vehicle Theft" |
HIGHEST_NIBRS_DESCRIPTION == "Pocket-Picking" |
HIGHEST_NIBRS_DESCRIPTION == "Robbery" |
HIGHEST_NIBRS_DESCRIPTION == "Stolen Property Offenses" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Building" |
HIGHEST_NIBRS_DESCRIPTION == "Theft of Motor Vehicle Parts from Vehicle" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Motor Vehicle" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Coin-Operated Machine Or Device")|>
group_by(CMPD_PATROL_DIVISION,HIGHEST_NIBRS_DESCRIPTION) |>
summarize(property_incidents_2017 = n())|>
ungroup()
print(Nonviolent_incidents_2017)
sum_total_2017 = Nonviolent_incidents_2017 |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(total_property_crimes = sum(property_incidents_2017, na.rm = TRUE))|>
ungroup()
print(sum_total_2017)
join_total_crime_property_crimes =
left_join(sum_total_2017,Total_crime_2017, by = "CMPD_PATROL_DIVISION")
print(join_total_crime_property_crimes)
with_percentage_join_total_crime_property_crimes = join_total_crime_property_crimes |>
mutate(percent_of_prop_crimes_17 = (total_property_crimes/total_crime_per_division) *100)
print(with_percentage_join_total_crime_property_crimes)
Total_crime_2023 = PD_Incidents |>
filter(YEAR == 2023) |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(total_crime_per_division_2023 = n())|>
ungroup()
print(Total_crime_2023)
Nonviolent_incidents_2023 = PD_Incidents|>
filter(YEAR == 2023)|>
filter(HIGHEST_NIBRS_DESCRIPTION == "Arson" |
HIGHEST_NIBRS_DESCRIPTION == "Burglary/B&E" |
HIGHEST_NIBRS_DESCRIPTION == "Damage/Vandalism Of Property" |
HIGHEST_NIBRS_DESCRIPTION == "Identity Theft" |
HIGHEST_NIBRS_DESCRIPTION == "Motor Vehicle Theft" |
HIGHEST_NIBRS_DESCRIPTION == "Pocket-Picking" |
HIGHEST_NIBRS_DESCRIPTION == "Robbery" |
HIGHEST_NIBRS_DESCRIPTION == "Stolen Property Offenses" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Building" |
HIGHEST_NIBRS_DESCRIPTION == "Theft of Motor Vehicle Parts from Vehicle" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Motor Vehicle" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Coin-Operated Machine Or Device")|>
group_by(CMPD_PATROL_DIVISION,HIGHEST_NIBRS_DESCRIPTION) |>
summarize(property_incidents_2023 = n())|>
ungroup()
print(Nonviolent_incidents_2023)
sum_total_2023 = Nonviolent_incidents_2023 |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(total_property_crimes_2023 = sum(property_incidents_2023, na.rm = TRUE))|>
ungroup()
print(sum_total_2023)
join_total_crime_property_crimes_2023 =
left_join(sum_total_2023,Total_crime_2023, by = "CMPD_PATROL_DIVISION")
print(join_total_crime_property_crimes_2023)
With_percent_join_total_crime_property_crimes_2023 = join_total_crime_property_crimes_2023 |>
mutate(Percent_of_property_crimes_2023 = (total_property_crimes_2023/total_crime_per_division_2023)*100)
print(With_percent_join_total_crime_property_crimes_2023)
crime_2023_2017_crime_join =
left_join(with_percentage_join_total_crime_property_crimes, With_percent_join_total_crime_property_crimes_2023, by = "CMPD_PATROL_DIVISION")
print(crime_2023_2017_crime_join)
crime_data = crime_2023_2017_crime_join |>
mutate(comp_percent_prop_crime_yearly_growth = (((Percent_of_property_crimes_2023/percent_of_prop_crimes_17)^(1/6)) -1))|>
print()
crime_data = crime_data |>
mutate(CMPD_PATROL_DIVISION = paste(CMPD_PATROL_DIVISION, "Division"))
combined_data = join_yearly_pop_growth |>
left_join(crime_data, by = c("DNAME" = "CMPD_PATROL_DIVISION"))
# Create the graph
ggplot(combined_data, aes(x = Yearly_density_growth, y = comp_percent_prop_crime_yearly_growth)) +
geom_point(color = "steelblue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(
title = "Yearly Density Growth vs. Percent Property Crime Growth",
x = "Yearly Density Growth",
y = "Percent Property Crime Growth"
) +
theme_minimal()
crime_data_2030 = crime_data |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(crime_rate_growth_percentage = comp_percent_prop_crime_yearly_growth*100)|>
print()
crime_data_2030 = crime_data_2030 |>
left_join(join_yearly_pop_growth |> select(DNAME, pop_density_30), by = c("CMPD_PATROL_DIVISION" = "DNAME"))|>
print()
crime_data_2030 = crime_data_2030 |>
mutate(Property_crime_percentage = (crime_rate_growth_percentage / 100))|>
print()
crime_data_2030 = crime_data_2030|>
left_join(With_percent_join_total_crime_property_crimes_2023, by = "CMPD_PATROL_DIVISION") |>
print()
View(with_percentage_join_total_crime_property_crimes)
View(With_percent_join_total_crime_property_crimes_2023)
View(crime_data_2030)
With_percent_join_total_crime_property_crimes_2023 = With_percent_join_total_crime_property_crimes_2023 |>
mutate(CMPD_PATROL_DIVISION = paste(CMPD_PATROL_DIVISION, "Division"))
crime_data_2030 = crime_data_2030|>
left_join(With_percent_join_total_crime_property_crimes_2023, by = "CMPD_PATROL_DIVISION") |>
print()
View(With_percent_join_total_crime_property_crimes_2023)
library(dplyr)
library(tidyverse)
library(lubridate)
library(tidycensus)
library(ggplot2)
library(dplyr)
library(sf)
Census_2010 = read_csv("~/Plan372/plan372_Final/Census_Block_Groups_2010.csv") #load census 2010
Census_2022 = read_csv("~/Plan372/plan372_Final/Census_Population_Block_Groups.csv") #load census 2022
PD_Incidents = read_csv("~/Plan372/plan372_Final/CMPD_Incidents.csv") #load incidents
PD_Offices = read_csv("~/Plan372/plan372_Final/CMPD_Police_Division_Offices.csv")#load offices
PD_Responses = read_csv("~/Plan372/plan372_Final/CMPD_Police_Response__Areas.csv") #load response areas
PD_Calls = read_csv("~/Plan372/plan372_Final/CMPD_Calls_for_Service.csv") #load calls for services
area_Census_2010 = read_csv("~/Plan372/plan372_Final/Response_area_Census_2010_created.csv")
area_Census_2022 = read_csv("~/Plan372/plan372_Final/Response_area_Census_2022.csv")
Violent_Crime = read_csv("~/Plan372/plan372_Final/CMPD_Violent_Crime.csv")
pop_density_2010 = area_Census_2010 |>
group_by(DNAME)|>
summarize(pop_density_2010 = mean(Pop_SqMi, na.rm = TRUE)) |>
ungroup()
print(pop_density_2010)
pop_density_22 = area_Census_2022 |>
group_by(DNAME) |>
summarize(pop_density_22 = mean(PopSqMi, na.rm = TRUE)) |>
ungroup()
print(pop_density_22)
density_join =
left_join(pop_density_22, pop_density_2010, by = "DNAME")
density_join <- density_join |>
mutate(
pop_density_10 = as.numeric(pop_density_2010),
pop_density_22 = as.numeric(pop_density_22)
)
Yearly_density_growth <- density_join |>
group_by(DNAME) |>
summarize(
Yearly_density_growth = ((pop_density_22 / pop_density_10) - 1))|>
ungroup()
print(Yearly_density_growth)
join_yearly_pop_growth = left_join(Yearly_density_growth, pop_density_22, by = "DNAME")
print(join_yearly_pop_growth)
join_yearly_pop_growth = join_yearly_pop_growth|>
mutate (pop_density_23 = ((pop_density_22) * (Yearly_density_growth
+1))) |>
mutate (pop_density_24 = ((pop_density_23) * (Yearly_density_growth
+1))) |>
mutate (pop_density_25 = ((pop_density_24) * (Yearly_density_growth
+1))) |>
mutate (pop_density_26 = ((pop_density_25) * (Yearly_density_growth
+1)))|>
mutate (pop_density_27 = ((pop_density_26) * (Yearly_density_growth
+1)))|>
mutate (pop_density_28 = ((pop_density_27) * (Yearly_density_growth
+1)))|>
mutate (pop_density_29 = ((pop_density_28) * (Yearly_density_growth
+1)))|>
mutate (pop_density_30 = ((pop_density_29) * (Yearly_density_growth
+1)))
print(join_yearly_pop_growth)
graph = join_yearly_pop_growth |>
pivot_longer(
cols = c("pop_density_22", "pop_density_23", "pop_density_24", "pop_density_25", "pop_density_26", "pop_density_27", "pop_density_28", "pop_density_29", "pop_density_30"),
names_to = "Year",
values_to = "Population_Density"
)
graph = graph |>
mutate(
Year = as.numeric(gsub("pop_density_", "", Year)),
Population_Density = as.numeric(Population_Density)
)
str(graph)
ggplot(graph, aes(x = Year, y = Population_Density, group = DNAME, color = DNAME)) +
geom_line() +
geom_point() +
labs(x = "Year", y = "Population Density", title = "Population Density over Eight Years (2022-2030)") +
scale_x_continuous(
breaks = 22:30,
labels = c("2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030")
) +
theme_minimal() +
theme(legend.title = element_blank(),
legend.key.size = unit(0.5, "cm"))
Total_Calls = PD_Calls |>
group_by(CALENDAR_YEAR)|>
summarize(count_num = sum(CALL_COUNT))|>
ungroup()
print(Total_Calls)
Total_crime_2017 = PD_Incidents |>
filter(YEAR == 2017) |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(total_crime_per_division = n())|>
ungroup()
print(Total_crime_2017)
Nonviolent_incidents_2017 = PD_Incidents|>
filter(YEAR == 2017)|>
filter(HIGHEST_NIBRS_DESCRIPTION == "Arson" |
HIGHEST_NIBRS_DESCRIPTION == "Burglary/B&E" |
HIGHEST_NIBRS_DESCRIPTION == "Damage/Vandalism Of Property" |
HIGHEST_NIBRS_DESCRIPTION == "Identity Theft" |
HIGHEST_NIBRS_DESCRIPTION == "Motor Vehicle Theft" |
HIGHEST_NIBRS_DESCRIPTION == "Pocket-Picking" |
HIGHEST_NIBRS_DESCRIPTION == "Robbery" |
HIGHEST_NIBRS_DESCRIPTION == "Stolen Property Offenses" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Building" |
HIGHEST_NIBRS_DESCRIPTION == "Theft of Motor Vehicle Parts from Vehicle" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Motor Vehicle" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Coin-Operated Machine Or Device")|>
group_by(CMPD_PATROL_DIVISION,HIGHEST_NIBRS_DESCRIPTION) |>
summarize(property_incidents_2017 = n())|>
ungroup()
print(Nonviolent_incidents_2017)
sum_total_2017 = Nonviolent_incidents_2017 |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(total_property_crimes = sum(property_incidents_2017, na.rm = TRUE))|>
ungroup()
print(sum_total_2017)
join_total_crime_property_crimes =
left_join(sum_total_2017,Total_crime_2017, by = "CMPD_PATROL_DIVISION")
print(join_total_crime_property_crimes)
with_percentage_join_total_crime_property_crimes = join_total_crime_property_crimes |>
mutate(percent_of_prop_crimes_17 = (total_property_crimes/total_crime_per_division) *100)
print(with_percentage_join_total_crime_property_crimes)
Total_crime_2023 = PD_Incidents |>
filter(YEAR == 2023) |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(total_crime_per_division_2023 = n())|>
ungroup()
print(Total_crime_2023)
Nonviolent_incidents_2023 = PD_Incidents|>
filter(YEAR == 2023)|>
filter(HIGHEST_NIBRS_DESCRIPTION == "Arson" |
HIGHEST_NIBRS_DESCRIPTION == "Burglary/B&E" |
HIGHEST_NIBRS_DESCRIPTION == "Damage/Vandalism Of Property" |
HIGHEST_NIBRS_DESCRIPTION == "Identity Theft" |
HIGHEST_NIBRS_DESCRIPTION == "Motor Vehicle Theft" |
HIGHEST_NIBRS_DESCRIPTION == "Pocket-Picking" |
HIGHEST_NIBRS_DESCRIPTION == "Robbery" |
HIGHEST_NIBRS_DESCRIPTION == "Stolen Property Offenses" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Building" |
HIGHEST_NIBRS_DESCRIPTION == "Theft of Motor Vehicle Parts from Vehicle" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Motor Vehicle" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Coin-Operated Machine Or Device")|>
group_by(CMPD_PATROL_DIVISION,HIGHEST_NIBRS_DESCRIPTION) |>
summarize(property_incidents_2023 = n())|>
ungroup()
print(Nonviolent_incidents_2023)
sum_total_2023 = Nonviolent_incidents_2023 |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(total_property_crimes_2023 = sum(property_incidents_2023, na.rm = TRUE))|>
ungroup()
print(sum_total_2023)
join_total_crime_property_crimes_2023 =
left_join(sum_total_2023,Total_crime_2023, by = "CMPD_PATROL_DIVISION")
print(join_total_crime_property_crimes_2023)
With_percent_join_total_crime_property_crimes_2023 = join_total_crime_property_crimes_2023 |>
mutate(Percent_of_property_crimes_2023 = (total_property_crimes_2023/total_crime_per_division_2023)*100)
print(With_percent_join_total_crime_property_crimes_2023)
crime_2023_2017_crime_join =
left_join(with_percentage_join_total_crime_property_crimes, With_percent_join_total_crime_property_crimes_2023, by = "CMPD_PATROL_DIVISION")
print(crime_2023_2017_crime_join)
crime_data = crime_2023_2017_crime_join |>
mutate(comp_percent_prop_crime_yearly_growth = (((Percent_of_property_crimes_2023/percent_of_prop_crimes_17)^(1/6)) -1))|>
print()
crime_data = crime_data |>
mutate(CMPD_PATROL_DIVISION = paste(CMPD_PATROL_DIVISION, "Division"))
combined_data = join_yearly_pop_growth |>
left_join(crime_data, by = c("DNAME" = "CMPD_PATROL_DIVISION"))
# Create the graph
ggplot(combined_data, aes(x = Yearly_density_growth, y = comp_percent_prop_crime_yearly_growth)) +
geom_point(color = "steelblue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(
title = "Yearly Density Growth vs. Percent Property Crime Growth",
x = "Yearly Density Growth",
y = "Percent Property Crime Growth"
) +
theme_minimal()
crime_data_2030 = crime_data |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(crime_rate_growth_percentage = comp_percent_prop_crime_yearly_growth*100)|>
print()
crime_data_2030 = crime_data_2030 |>
left_join(join_yearly_pop_growth |> select(DNAME, pop_density_30), by = c("CMPD_PATROL_DIVISION" = "DNAME"))|>
print()
crime_data_2030 = crime_data_2030 |>
mutate(Property_crime_percentage = (crime_rate_growth_percentage / 100))|>
print()
With_percent_join_total_crime_property_crimes_2023 = With_percent_join_total_crime_property_crimes_2023 |>
mutate(CMPD_PATROL_DIVISION = paste(CMPD_PATROL_DIVISION, "Division"))
crime_data_2030 = crime_data_2030|>
left_join(With_percent_join_total_crime_property_crimes_2023, by = "CMPD_PATROL_DIVISION") |>
print()
library(dplyr)
library(tidyverse)
library(lubridate)
library(tidycensus)
library(ggplot2)
library(dplyr)
library(sf)
Census_2010 = read_csv("~/Plan372/plan372_Final/Census_Block_Groups_2010.csv") #load census 2010
Census_2022 = read_csv("~/Plan372/plan372_Final/Census_Population_Block_Groups.csv") #load census 2022
PD_Incidents = read_csv("~/Plan372/plan372_Final/CMPD_Incidents.csv") #load incidents
PD_Offices = read_csv("~/Plan372/plan372_Final/CMPD_Police_Division_Offices.csv")#load offices
PD_Responses = read_csv("~/Plan372/plan372_Final/CMPD_Police_Response__Areas.csv") #load response areas
PD_Calls = read_csv("~/Plan372/plan372_Final/CMPD_Calls_for_Service.csv") #load calls for services
area_Census_2010 = read_csv("~/Plan372/plan372_Final/Response_area_Census_2010_created.csv")
area_Census_2022 = read_csv("~/Plan372/plan372_Final/Response_area_Census_2022.csv")
Violent_Crime = read_csv("~/Plan372/plan372_Final/CMPD_Violent_Crime.csv")
pop_density_2010 = area_Census_2010 |>
group_by(DNAME)|>
summarize(pop_density_2010 = mean(Pop_SqMi, na.rm = TRUE)) |>
ungroup()
print(pop_density_2010)
pop_density_22 = area_Census_2022 |>
group_by(DNAME) |>
summarize(pop_density_22 = mean(PopSqMi, na.rm = TRUE)) |>
ungroup()
print(pop_density_22)
density_join =
left_join(pop_density_22, pop_density_2010, by = "DNAME")
density_join <- density_join |>
mutate(
pop_density_10 = as.numeric(pop_density_2010),
pop_density_22 = as.numeric(pop_density_22)
)
Yearly_density_growth <- density_join |>
group_by(DNAME) |>
summarize(
Yearly_density_growth = ((pop_density_22 / pop_density_10) - 1))|>
ungroup()
print(Yearly_density_growth)
join_yearly_pop_growth = left_join(Yearly_density_growth, pop_density_22, by = "DNAME")
print(join_yearly_pop_growth)
join_yearly_pop_growth = join_yearly_pop_growth|>
mutate (pop_density_23 = ((pop_density_22) * (Yearly_density_growth
+1))) |>
mutate (pop_density_24 = ((pop_density_23) * (Yearly_density_growth
+1))) |>
mutate (pop_density_25 = ((pop_density_24) * (Yearly_density_growth
+1))) |>
mutate (pop_density_26 = ((pop_density_25) * (Yearly_density_growth
+1)))|>
mutate (pop_density_27 = ((pop_density_26) * (Yearly_density_growth
+1)))|>
mutate (pop_density_28 = ((pop_density_27) * (Yearly_density_growth
+1)))|>
mutate (pop_density_29 = ((pop_density_28) * (Yearly_density_growth
+1)))|>
mutate (pop_density_30 = ((pop_density_29) * (Yearly_density_growth
+1)))
print(join_yearly_pop_growth)
graph = join_yearly_pop_growth |>
pivot_longer(
cols = c("pop_density_22", "pop_density_23", "pop_density_24", "pop_density_25", "pop_density_26", "pop_density_27", "pop_density_28", "pop_density_29", "pop_density_30"),
names_to = "Year",
values_to = "Population_Density"
)
graph = graph |>
mutate(
Year = as.numeric(gsub("pop_density_", "", Year)),
Population_Density = as.numeric(Population_Density)
)
str(graph)
ggplot(graph, aes(x = Year, y = Population_Density, group = DNAME, color = DNAME)) +
geom_line() +
geom_point() +
labs(x = "Year", y = "Population Density", title = "Population Density over Eight Years (2022-2030)") +
scale_x_continuous(
breaks = 22:30,
labels = c("2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030")
) +
theme_minimal() +
theme(legend.title = element_blank(),
legend.key.size = unit(0.5, "cm"))
Total_Calls = PD_Calls |>
group_by(CALENDAR_YEAR)|>
summarize(count_num = sum(CALL_COUNT))|>
ungroup()
print(Total_Calls)
Total_crime_2017 = PD_Incidents |>
filter(YEAR == 2017) |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(total_crime_per_division = n())|>
ungroup()
print(Total_crime_2017)
Nonviolent_incidents_2017 = PD_Incidents|>
filter(YEAR == 2017)|>
filter(HIGHEST_NIBRS_DESCRIPTION == "Arson" |
HIGHEST_NIBRS_DESCRIPTION == "Burglary/B&E" |
HIGHEST_NIBRS_DESCRIPTION == "Damage/Vandalism Of Property" |
HIGHEST_NIBRS_DESCRIPTION == "Identity Theft" |
HIGHEST_NIBRS_DESCRIPTION == "Motor Vehicle Theft" |
HIGHEST_NIBRS_DESCRIPTION == "Pocket-Picking" |
HIGHEST_NIBRS_DESCRIPTION == "Robbery" |
HIGHEST_NIBRS_DESCRIPTION == "Stolen Property Offenses" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Building" |
HIGHEST_NIBRS_DESCRIPTION == "Theft of Motor Vehicle Parts from Vehicle" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Motor Vehicle" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Coin-Operated Machine Or Device")|>
group_by(CMPD_PATROL_DIVISION,HIGHEST_NIBRS_DESCRIPTION) |>
summarize(property_incidents_2017 = n())|>
ungroup()
print(Nonviolent_incidents_2017)
sum_total_2017 = Nonviolent_incidents_2017 |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(total_property_crimes = sum(property_incidents_2017, na.rm = TRUE))|>
ungroup()
print(sum_total_2017)
join_total_crime_property_crimes =
left_join(sum_total_2017,Total_crime_2017, by = "CMPD_PATROL_DIVISION")
print(join_total_crime_property_crimes)
with_percentage_join_total_crime_property_crimes = join_total_crime_property_crimes |>
mutate(percent_of_prop_crimes_17 = (total_property_crimes/total_crime_per_division) *100)
print(with_percentage_join_total_crime_property_crimes)
Total_crime_2023 = PD_Incidents |>
filter(YEAR == 2023) |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(total_crime_per_division_2023 = n())|>
ungroup()
print(Total_crime_2023)
Nonviolent_incidents_2023 = PD_Incidents|>
filter(YEAR == 2023)|>
filter(HIGHEST_NIBRS_DESCRIPTION == "Arson" |
HIGHEST_NIBRS_DESCRIPTION == "Burglary/B&E" |
HIGHEST_NIBRS_DESCRIPTION == "Damage/Vandalism Of Property" |
HIGHEST_NIBRS_DESCRIPTION == "Identity Theft" |
HIGHEST_NIBRS_DESCRIPTION == "Motor Vehicle Theft" |
HIGHEST_NIBRS_DESCRIPTION == "Pocket-Picking" |
HIGHEST_NIBRS_DESCRIPTION == "Robbery" |
HIGHEST_NIBRS_DESCRIPTION == "Stolen Property Offenses" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Building" |
HIGHEST_NIBRS_DESCRIPTION == "Theft of Motor Vehicle Parts from Vehicle" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Motor Vehicle" |
HIGHEST_NIBRS_DESCRIPTION == "Theft From Coin-Operated Machine Or Device")|>
group_by(CMPD_PATROL_DIVISION,HIGHEST_NIBRS_DESCRIPTION) |>
summarize(property_incidents_2023 = n())|>
ungroup()
print(Nonviolent_incidents_2023)
sum_total_2023 = Nonviolent_incidents_2023 |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(total_property_crimes_2023 = sum(property_incidents_2023, na.rm = TRUE))|>
ungroup()
print(sum_total_2023)
join_total_crime_property_crimes_2023 =
left_join(sum_total_2023,Total_crime_2023, by = "CMPD_PATROL_DIVISION")
print(join_total_crime_property_crimes_2023)
With_percent_join_total_crime_property_crimes_2023 = join_total_crime_property_crimes_2023 |>
mutate(Percent_of_property_crimes_2023 = (total_property_crimes_2023/total_crime_per_division_2023)*100)
print(With_percent_join_total_crime_property_crimes_2023)
crime_2023_2017_crime_join =
left_join(with_percentage_join_total_crime_property_crimes, With_percent_join_total_crime_property_crimes_2023, by = "CMPD_PATROL_DIVISION")
print(crime_2023_2017_crime_join)
crime_data = crime_2023_2017_crime_join |>
mutate(comp_percent_prop_crime_yearly_growth = (((Percent_of_property_crimes_2023/percent_of_prop_crimes_17)^(1/6)) -1))|>
print()
crime_data = crime_data |>
mutate(CMPD_PATROL_DIVISION = paste(CMPD_PATROL_DIVISION, "Division"))
combined_data = join_yearly_pop_growth |>
left_join(crime_data, by = c("DNAME" = "CMPD_PATROL_DIVISION"))
# Create the graph
ggplot(combined_data, aes(x = Yearly_density_growth, y = comp_percent_prop_crime_yearly_growth)) +
geom_point(color = "steelblue") +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(
title = "Yearly Density Growth vs. Percent Property Crime Growth",
x = "Yearly Density Growth",
y = "Percent Property Crime Growth"
) +
theme_minimal()
crime_data_2030 = crime_data |>
group_by(CMPD_PATROL_DIVISION)|>
summarize(crime_rate_growth_percentage = comp_percent_prop_crime_yearly_growth*100)|>
print()
crime_data_2030 = crime_data_2030 |>
left_join(join_yearly_pop_growth |> select(DNAME, pop_density_30), by = c("CMPD_PATROL_DIVISION" = "DNAME"))|>
print()
crime_data_2030 = crime_data_2030 |>
mutate(Property_crime_percentage = (crime_rate_growth_percentage / 100))|>
print()
With_percent_join_total_crime_property_crimes_2023 = With_percent_join_total_crime_property_crimes_2023 |>
mutate(CMPD_PATROL_DIVISION = paste(CMPD_PATROL_DIVISION, "Division"))
crime_data_2030 = crime_data_2030|>
left_join(With_percent_join_total_crime_property_crimes_2023, by = "CMPD_PATROL_DIVISION") |>
print()
crime_data_2030 = crime_data_2030|>
mutate(Percent_of_property_crimes_2030 = Percent_of_property_crimes_2023*((1+Property_crime_percentage)^7))|>
print()
crime_data_2030 = crime_data_2030|>
mutate(Percent_of_property_crimes_2030 = Percent_of_property_crimes_2023*((1+Property_crime_percentage)^7))|>
arrange(desc(Percent_of_property_crimes_2030)) |>
print()
